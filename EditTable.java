package mysqlproject;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import javax.swing.JOptionPane;
public class EditTable extends javax.swing.JFrame {
    private static String user, password, database, puerto, hostname;
    boolean login;
    public EditTable() {
        initComponents();
    }
    public void input(String usr, String pass, String puerto1, String data, String host){
        user = usr; password=pass;
        puerto = puerto1; database = data; hostname = host;
        
    }
    public Connection getConnection(){
        Connection cnx = null;
        try {
            String url = "jdbc:mysql://"+hostname+":"+puerto+"/"+database+"?";
            cnx = DriverManager.getConnection(url, user, password);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
        return cnx;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ViewColumns = new javax.swing.JButton();
        AddColumn = new javax.swing.JButton();
        EditColumn = new javax.swing.JButton();
        DeleteColumn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CRUD Columns");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        ViewColumns.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ViewColumns.setText("Mirar Columnas");
        ViewColumns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewColumnsActionPerformed(evt);
            }
        });

        AddColumn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        AddColumn.setText("Agregar Columna");
        AddColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddColumnActionPerformed(evt);
            }
        });

        EditColumn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        EditColumn.setText("Editar Columnas");
        EditColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditColumnActionPerformed(evt);
            }
        });

        DeleteColumn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        DeleteColumn.setText("Eliminar Columna");
        DeleteColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteColumnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddColumn)
                    .addComponent(EditColumn, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DeleteColumn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ViewColumns, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewColumns)
                    .addComponent(AddColumn))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditColumn)
                    .addComponent(DeleteColumn))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddColumnActionPerformed
        try {
            AddColumn x = new AddColumn();
            x.input(user, password, puerto, database, hostname);
            x.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_AddColumnActionPerformed

    private void DeleteColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteColumnActionPerformed
        try {
            String columnname, tablename;
            tablename = JOptionPane.showInputDialog(this, "Ingrese el nombre de la tabla");
            columnname = JOptionPane.showInputDialog(rootPane, "Ingrese el nombre de la columna");
            if(columnname.isEmpty() || tablename.isEmpty()){
                JOptionPane.showMessageDialog(rootPane, "Ingrese un valor en la columna, por favor");
            }else{
                Connection con = getConnection();
                Statement stm = con.createStatement();
                String sql = "alter table "+tablename+" drop column "+columnname;
                stm.executeUpdate(sql);
                JOptionPane.showMessageDialog(rootPane, "Columna "+columnname+" eliminada!");
            }
            
        } catch (Exception e) {
            JOptionPane.showConfirmDialog(rootPane, e.getMessage());
        }
    }//GEN-LAST:event_DeleteColumnActionPerformed

    private void EditColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditColumnActionPerformed
        try {
            String newname, oldname, tablename;
            tablename = JOptionPane.showInputDialog(rootPane, "Ingrese el nombre de la tabla a modificar");
            oldname = JOptionPane.showInputDialog(this, "Ingrese el nombre de la columna vieja");
            newname = JOptionPane.showInputDialog(this, "Ingrese el nombre de la nueva columna");
            
            if(oldname.isEmpty() || newname.isEmpty()){
                JOptionPane.showMessageDialog(rootPane, "Por favor llene los campos");
            }else{
                String sql = "Alter table "+tablename+" rename column "+oldname+" to "+newname;
                Connection con = getConnection();
                Statement stm = con.createStatement();
                stm.executeUpdate(sql);
                JOptionPane.showMessageDialog(rootPane, "Tabla actualizada!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Columna no existente!");
            
        }
    }//GEN-LAST:event_EditColumnActionPerformed

    private void ViewColumnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewColumnsActionPerformed
        try {
            String tablename = JOptionPane.showInputDialog(rootPane, "Ingrese el nombre de la tabla a visualizar");
            VisualTable x = new VisualTable();
            x.input(user, password, tablename, database, puerto, hostname);
            x.Tabla();
            x.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Tabla no existente");
        }
    }//GEN-LAST:event_ViewColumnsActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.getContentPane().setBackground(new Color(0, 255, 255)); 
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddColumn;
    private javax.swing.JButton DeleteColumn;
    private javax.swing.JButton EditColumn;
    private javax.swing.JButton ViewColumns;
    // End of variables declaration//GEN-END:variables
}
