/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mysqlproject;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author mauro
 */
public class ScreenForm extends javax.swing.JFrame {
       String user, password, database, puerto, hostname;
       boolean login;
       public int columnas;
       Vector ColumnName = new Vector();
       DefaultTableModel modelo = new DefaultTableModel();
       
    /**
     * Creates new form ScreenForm
     */
        public ScreenForm() {
        initComponents();
    }
    public Connection getConnection(){
        Connection cnx = null;
        try {
            String url = "jdbc:mysql://"+hostname+":"+puerto+"/"+database+"?";
            cnx = DriverManager.getConnection(url, user, password);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
        return cnx;
    }
    public void input(String usr, String pass, String puerto1, String data, String host){
        user = usr; password=pass;
        puerto = puerto1; database = data; hostname = host;
    }
    
    
    private void llenadocantidad(){
        try {
            Connection con = getConnection();
            String sql = "select count(column_name) as Number from information_schema.columns where table_name='materia'"; // concatenamos sentencia
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql); 
            rs.next();
            columnas = rs.getInt("Number");
          
        } catch (Exception e){
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    private void llenadonombre(){
        try {
            Connection con = getConnection();
            String sql1 = "SELECT column_name FROM information_schema.columns WHERE table_schema = DATABASE() AND table_name='materia' ORDER BY ordinal_position";
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql1);
            for(int i = 0; i<columnas; i++){
                rs.next();
                ColumnName.addElement(rs.getString("COLUMN_NAME"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        CreateTable = new javax.swing.JButton();
        EditTable = new javax.swing.JButton();
        ViewTable = new javax.swing.JButton();
        DeleteTable = new javax.swing.JButton();
        ForTables = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        List2 = new javax.swing.JList<>();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CRUD Tables");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        CreateTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        CreateTable.setText("Crear tabla");
        CreateTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateTableActionPerformed(evt);
            }
        });

        EditTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        EditTable.setText("Editar Table");
        EditTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditTableActionPerformed(evt);
            }
        });

        ViewTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ViewTable.setText("View Table");
        ViewTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewTableActionPerformed(evt);
            }
        });

        DeleteTable.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        DeleteTable.setText("Eliminar Table");
        DeleteTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteTableActionPerformed(evt);
            }
        });

        ForTables.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        ForTables.setText("Ver Tablas");
        ForTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ForTablesActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(List2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EditTable)
                            .addComponent(ViewTable))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(DeleteTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CreateTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ForTables)
                        .addGap(107, 107, 107)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ViewTable)
                            .addComponent(CreateTable))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EditTable)
                            .addComponent(DeleteTable))
                        .addGap(18, 18, 18)
                        .addComponent(ForTables))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ViewTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewTableActionPerformed
        try {
            
            String tablename = JOptionPane.showInputDialog(rootPane, "Ingrese el nombre de la tabla a visualizar");
            if(tablename.isEmpty()){
                JOptionPane.showMessageDialog(rootPane, "Ingrese un valor");
            }else{
                VisualTable x = new VisualTable();
                x.input(user, password, tablename, database, puerto, hostname);
                x.Tabla();
                x.setVisible(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Tabla no existente");
        }
    }//GEN-LAST:event_ViewTableActionPerformed

    private void CreateTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateTableActionPerformed
        try{
            CreateTable x = new CreateTable();
            x.input(user, password, puerto, database, hostname);
            x.setVisible(true);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_CreateTableActionPerformed

    private void DeleteTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteTableActionPerformed
        try{
                String value = JOptionPane.showInputDialog(this,"Ingrese el nombre de la tabla a eliminar","Eliminar",JOptionPane.QUESTION_MESSAGE);
                String url = "jdbc:mysql://"+hostname+":"+puerto+"/"+database+"?";
                Connection con = DriverManager.getConnection(url, user, password);
                Statement stm = con.createStatement();
                String sql = "drop table "+value;
                stm.executeUpdate(sql);
                JOptionPane.showMessageDialog(this, "Tabla eliminada", "Eliminacion", JOptionPane.INFORMATION_MESSAGE);
                //prueba
                DefaultListModel model = new DefaultListModel();
                model.removeAllElements();
                String sql1 = "show tables from "+database;
                Statement stm1 = con.createStatement();
                ResultSet rs = stm1.executeQuery(sql1);
                
                while(rs.next()){
                   model.addElement(rs.getString("Tables_in_"+database));
                }
                List2.setModel(model);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_DeleteTableActionPerformed

    private void EditTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditTableActionPerformed
        try {
            EditTable x = new EditTable();
            x.setVisible(true);
            
            
        } catch (Exception e) {
            
        }
        
        
        
        
    }//GEN-LAST:event_EditTableActionPerformed

    private void ForTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ForTablesActionPerformed
        try{
            DefaultListModel model = new DefaultListModel();
            model.removeAllElements();
            String sql = "show tables from "+database;
            Connection con = getConnection();
            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            
            while(rs.next()){
               model.addElement(rs.getString("Tables_in_"+database));
            }
            List2.setModel(model);
        }catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
        
        
        
        
    }//GEN-LAST:event_ForTablesActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.getContentPane().setBackground(new Color(0, 255, 255)); 
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScreenForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScreenForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScreenForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScreenForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScreenForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateTable;
    private javax.swing.JButton DeleteTable;
    private javax.swing.JButton EditTable;
    private javax.swing.JButton ForTables;
    private javax.swing.JList<String> List2;
    private javax.swing.JButton ViewTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
